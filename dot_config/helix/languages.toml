
# https://github.com/netmute/ctags-lsp
[language-server.ctags-lsp]
command = "ctags-lsp"

# introduce new language server
[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 20            # set max completion results len for each group: words, snippets, unicode-input
snippets_first = true                # completions will return before snippets by default
snippets_inline_by_word_tail = false # suggest snippets by WORD tail, for example text `xsq|` become `x^2|` when snippet `sq` has body `^2`
feature_words = true                 # enable completion by word
feature_snippets = true              # enable snippets
feature_unicode_input = true         # enable "unicode input"
feature_paths = true                 # enable path completion
feature_citations = false            # enable citation completion (only on `citation` feature enabled)


# write logs to /tmp/completion.log
[language-server.scls.environment]
RUST_LOG = "info,simple-completion-language-server=info"
LOG_FILE = "/tmp/completion.log"

# append language server to existed languages
[[language]]
name = "rust"
language-servers = [ "scls", "rust-analyzer" ]

[[language]]
name = "toml"
# language-servers = ["scls"]
language-servers = ["ctags-lsp"]

[[language]]
name = "xml"
language-servers = ["ctags-lsp"]



[[language]]
name = "php"
scope = "source.php"
injection-regex = "php"
file-types = ["php", "inc", "php4", "php5", "phtml", "ctp"]
shebangs = ["php"]
roots = ["composer.json", "index.php"]
comment-token = "//"
language-servers = [ "intelephense" ]
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "sql"
scope = "source.sql"
language-servers = ["sqls"]


[language-server.sqls]
command = "sqls"
# args = ["-t", "-l", "/home/osto/tmp/sqls.log"]


######## GO #####################
[[language]]
name = "go"
auto-format = true
formatter = { command = "goimports" }
language-servers = ["gopls", "lsp-ai"]
# language-servers = ["gopls"]

[language-server.gopls]
command = "gopls"

[language-server.gopls.config.hints]
assignVariableTypes = true
compositeLiteralFields = true
constantValues = true
functionTypeParameters = true
parameterNames = true
rangeVariableTypes = true
#################################


[[language]]
name = "markdown"
formatter = { command = 'prettier', args = ["--parser", "markdown"] }
language-servers = ["lsp-ai"]

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }
language-servers = ["ctags-lsp"]

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--parser", "json"] }
language-servers = ["ctags-lsp", "lsp-ai"]

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }
language-servers = ["ctags-lsp"]

[[language]]
name = "javascript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
language-servers = ["ctags-lsp"]

[[language]]
name = "typescript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
language-servers = ["ctags-lsp"]

[[language]]
name = "tsx"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
language-servers = ["ctags-lsp"]

[[language]]
name = "yaml"
formatter = { command = 'prettier', args = ["--parser", "yaml"] }
auto-format = true
language-servers = ["ctags-lsp"]

[[language]]
name = "python"
language-servers = ["pylsp", "lsp-ai"]


##############################
## Configuration for lsp-ai ##
##############################

[language-server.lsp-ai]
command = "lsp-ai"
args = ["--config","/home/oscar/.config/helix/lsp-ai-gemini.json", "--use-seperate-log-file"]
