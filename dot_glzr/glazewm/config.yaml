general:
  # Commands to run when the WM has started (e.g. to run a script or launch
  # another application). Here we are running a batch script to start Zebar.
  # startup_commands: ['shell-exec %userprofile%/.glzr/zebar/start.bat']
  startup_commands: ["shell-exec zebar"]

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: false

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: "monitor_focus"

gaps:
  # Gap between adjacent windows.
  inner_gap: "10px"

  # Gap between windows and the screen edge.
  outer_gap:
    top: "10px"
    right: "10px"
    bottom: "50px"
    left: "10px"

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: "#ff0000"
    transparency:
      enabled: true
      opacity: "100%"

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: true
      color: "#a1a1a1"
    transparency:
      enabled: true
      opacity: "95%"

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: "tiling"

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true

      # Whether to show floating windows as always on top.
      shown_on_top: false

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: true

      # Whether to show fullscreen windows as always on top.
      shown_on_top: false

workspaces:
  - name: "1:Left"
    bind_to_monitor: 0
  - name: "2:Center"
    bind_to_monitor: 1
  - name: "3:Right"
    bind_to_monitor: 2
  - name: "4:Comms"
    bind_to_monitor: 1
    keep_alive: true
  - name: "5:Terminal"
    bind_to_monitor: 1
    keep_alive: true
  - name: "6:LV1"
    bind_to_monitor: 0
  - name: "7:LV2"
    bind_to_monitor: 1
  - name: "8:LV3"
    bind_to_monitor: 2
  - name: "9"

window_rules:
  - commands: ["move --workspace 1:Left"]
    match:
      - window_title: { equals: "fman" }
  - commands: ["move --workspace 1:Left","size --width 25%"]
    match:
      - window_title: { equals: "Memos" }
        window_process: { regex: "chrome" }

  - commands: ["move --workspace 2:Center" ]
    match:
      # too much
      #- window_process: { regex: "msedge|brave|chrome" }
      - window_title: { equals: "BROWSER" }

  # - commands: ["move --workspace 2:Center", "size --width 30%"]
  #   match:
  #     - window_title: { equals: "MINIBROWSER" }

  
  - commands: ["move --workspace 2:Center", "size --width 30%"]
  # - commands: ["move --workspace 7:LV2"]
    match:
      - window_process: { equals: "qutebrowser" }

  - commands: ["move --workspace 5:Terminal"]
    match:
      - window_class: { equals: "org.wezfurlong.wezterm" }

  - commands: ["move --workspace 4:Comms"]
    match:
      - window_class: { equals: "TeamsWebView" }
  - commands: ["move --workspace 4:Comms"]
    match:
      - window_title: { equals: "Outlook (PWA) - Email - Torresbaca, Oscar - Outlook" }

  - commands: ["ignore"]
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: "zebar" }

      # ignore listary
      - window_process: { equals: "Listary.exe" }
      - window_class: { regex: "HwndWrapper" }
      # Ignore rdp
      - window_process: { equals: "TscShellContainerClass" }
      - window_class: { equals: "TscShellContainerClass" }
      - window_process: { equals: "BBarWindowClass" }
      - window_title: { regex: "BBar" }
      - window_title:
          {
            regex: "TestStation02 - HWCRack02-trh.nvlsi.no - Remote Desktop Connection",
          }
      - window_process: { equals: "mstsc.exe" }
      - window_process: { equals: "mstsc" }

      # ignore tortoise
      - window_process: { equals: "TortoiseProc.exe" }

      #ignore winmerge
      - window_class: { equals: "WinMergeWindowClassW" }

      #ignore labview
      - window_class: { equals: "LVDChild" }

      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: "[Pp]icture.in.[Pp]icture" }
        window_class: { regex: "Chrome_WidgetWin_1|MozillaDialogClass" }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: "PowerToys.PowerAccent" }
      - window_process: { equals: "Lively" }
        window_class: { regex: "HwndWrapper*" }

binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: "resize"
    keybindings:
      - commands: ["resize --width -2%"]
        bindings: ["h", "left"]
      - commands: ["resize --width +2%"]
        bindings: ["l", "right"]
      - commands: ["resize --height +2%"]
        bindings: ["k", "up"]
      - commands: ["resize --height -2%"]
        bindings: ["j", "down"]
      # Press enter/escape to return to default keybindings.
      - commands: ["wm-disable-binding-mode --name resize"]
        bindings: ["escape", "enter"]

  # When enabled, all keybindings are disabled except for alt+shift+p which
  # returns to default keybindings.
  # remmaped to win+shift+p
  - name: "pause"
    keybindings:
      - commands: ["wm-disable-binding-mode --name pause"]
        bindings: ["alt+shift+p"]

keybindings:
  # Shift focus in a given direction.
  # remapped to win+arrows
  - commands: ["focus --direction left"]
    bindings: ["alt+h"]
  - commands: ["focus --direction right"]
    bindings: ["alt+;"]
  - commands: ["focus --direction up"]
    bindings: ["alt+k"]
  - commands: ["focus --direction down"]
    bindings: ["alt+j"]

  # # Shift focus in a given direction.
  # - commands: ['focus --direction left']
  #   bindings: ['alt+h', 'alt+left']
  # - commands: ['focus --direction right']
  #   bindings: ['alt+l', 'alt+right']
  # - commands: ['focus --direction up']
  #   bindings: ['alt+k', 'alt+up']
  # - commands: ['focus --direction down']
  #   bindings: ['alt+j', 'alt+down']

  # Move focused window in a given direction.
  # remapped to win+arrows
  - commands: ["move --direction left"]
    bindings: ["alt+shift+h"]
  - commands: ["move --direction right"]
    bindings: ["alt+shift+;"]
  - commands: ["move --direction up"]
    bindings: ["alt+shift+k"]
  - commands: ["move --direction down"]
    bindings: ["alt+shift+j"]

  # Resize focused window by a percentage or pixel amount.
  # Disable as some conflict with Helix
  # - commands: ['resize --width -2%']
  #   bindings: ['alt+u']
  # - commands: ['resize --width +2%']
  #   bindings: ['alt+p']
  # - commands: ['resize --height +2%']
  #   bindings: ['alt+o']
  # - commands: ['resize --height -2%']
  #   bindings: ['alt+i']

  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name 'resize'.
  - commands: ["wm-enable-binding-mode --name resize"]
    bindings: ["alt+r"]

  # Disables all keybindings until alt+shift+p is pressed again.
  # win+shift+p
  - commands: ["wm-enable-binding-mode --name pause"]
    bindings: ["alt+shift+p"]

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ["toggle-tiling-direction"]
    bindings: ["alt+v"]

  # Change focus from tiling windows -> floating -> fullscreen.
  - commands: ["wm-cycle-focus"]
    bindings: ["alt+shift+space"]

  # Change the focused window to be floating.
  # - commands: ['toggle-floating --centered']
  #   bindings: ['alt+shift+space']

  # Change the focused window to be tiling.
  # should remap to win+t
  - commands: ["toggle-tiling"]
    bindings: ["alt+t"]

  # Change the focused window to be fullscreen.
  #remmaped to win+f
  - commands: ["toggle-fullscreen"]
    bindings: ["alt+f"]

  # Minimize focused window.
  - commands: ["toggle-minimized"]
    bindings: ["alt+m"]

  # Close focused window.
  # should remap to win+shift+q
  - commands: ["close"]
    bindings: ["alt+shift+q"]

  # Kill GlazeWM process safely.
  # should remap to win+shift+e
  - commands: ["wm-exit"]
    bindings: ["alt+shift+e"]

  # Re-evaluate configuration file.
  # should remap to win+shift+r
  - commands: ["wm-reload-config"]
    bindings: ["alt+shift+r"]
  # Redraw all windows.
  - commands: ["wm-redraw"]
    bindings: ["alt+shift+w"]

  # Launch CMD terminal. Alternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  # WIN original was alt+enter, changed to alt+c but using win+enter
  # - commands: ['shell-exec C:\Program Files\Alacritty\alacritty.exe']
  - commands: ["shell-exec wezterm-gui"]
    bindings: ["alt+c"]
  # Focus the next/previous workspace defined in `workspaces` config.
  # win+s is search, should be fine to remap to win+s
  - commands: ["focus --next-workspace"]
    bindings: ["alt+s"]
  # win+a is notification maybe
  - commands: ["focus --prev-workspace"]
    bindings: ["alt+a"]

  # Focus the workspace that last had focus.
  # win+d is show desktop, not really useful remap
  - commands: ["focus --recent-workspace"]
    bindings: ["alt+d"]

  # Change focus to a workspace defined in `workspaces` config.
  # WIN
  - commands: ["focus --workspace 1:Left"]
    bindings: ["alt+1"]
  - commands: ["focus --workspace 2:Center"]
    bindings: ["alt+2"]
  - commands: ["focus --workspace 3:Right"]
    bindings: ["alt+3"]
  - commands: ["focus --workspace 4:Comms"]
    bindings: ["alt+4"]
  - commands: ["focus --workspace 5:Terminal"]
    bindings: ["alt+5"]
  - commands: ["focus --workspace 6:LV1"]
    bindings: ["alt+6"]
  - commands: ["focus --workspace 7:LV2"]
    bindings: ["alt+7"]
  - commands: ["focus --workspace 8:LV3"]
    bindings: ["alt+8"]
  - commands: ["focus --workspace 9"]
    bindings: ["alt+9"]

  # Move the focused window's parent workspace to a monitor in a given
  # direction.
  - commands: ["move-workspace --direction left"]
    bindings: ["alt+shift+a"]
  - commands: ["move-workspace --direction right"]
    bindings: ["alt+shift+f"]
  - commands: ["move-workspace --direction up"]
    bindings: ["alt+shift+d"]
  - commands: ["move-workspace --direction down"]
    bindings: ["alt+shift+s"]

  # Move focused window to a workspace defined in `workspaces` config.
  # WIN
  - commands: ["move --workspace 1:Left", "focus --workspace 1:Left"]
    bindings: ["alt+shift+1"]
  - commands: ["move --workspace 2:Center", "focus --workspace 2:Center"]
    bindings: ["alt+shift+2"]
  - commands: ["move --workspace 3:Right", "focus --workspace 3:Right"]
    bindings: ["alt+shift+3"]
  - commands: ["move --workspace 4:Comms", "focus --workspace 4:Comms"]
    bindings: ["alt+shift+4"]
  - commands: ["move --workspace 5:Terminal", "focus --workspace 5:Terminal"]
    bindings: ["alt+shift+5"]
  - commands: ["move --workspace 6:LV1", "focus --workspace 6:LV1"]
    bindings: ["alt+shift+6"]
  - commands: ["move --workspace 7:LV2", "focus --workspace 7:LV2"]
    bindings: ["alt+shift+7"]
  - commands: ["move --workspace 8:LV3", "focus --workspace 8:LV3"]
    bindings: ["alt+shift+8"]
  - commands: ["move --workspace 9", "focus --workspace 9"]
    bindings: ["alt+shift+9"]

  # - commands: ['move --workspace 2', 'focus --workspace 2', 'toggle-fullscreen']
  #   bindings: ['alt+shift+a']
